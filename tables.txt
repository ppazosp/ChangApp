create table
  public.adverts (
    "user" bigint generated by default as identity not null,
    type bigint generated by default as identity not null,
    place bigint not null,
    title text not null,
    description text null,
    image text null,
    id bigint generated by default as identity not null,
    date text not null,
    constraint adverts_pkey primary key (
      "user",
      type,
      place
    ),
    constraint adverts_id_key unique (id),
    constraint adverts_type_fkey foreign key (
      type
    ) references types (id) on update cascade on delete cascade,
    constraint advert_user_fkey foreign key ("user") references users (id) on update cascade on delete cascade,
    constraint advert_place_fkey foreign key (place) references places (id) on update cascade on delete cascade,
    constraint adverts_date_check check ((length(date) < 50)),
    constraint adverts_title_check check ((length(title) < 100)),
    constraint adverts_description_check check ((length(description) < 500))
  ) tablespace pg_default;


  create table
  public.places (
    id bigint generated by default as identity not null,
    name text not null,
    constraint place_pkey primary key (id),
    constraint place_id_key unique (id),
    constraint place_name_check check ((length(name) < 50))
  ) tablespace pg_default;


  create table
  public.types (
    id bigint generated by default as identity not null,
    name text not null,
    constraint activity_pkey primary key (id),
    constraint activity_id_key unique (id),
    constraint activity_name_check check ((length(name) < 50))
  ) tablespace pg_default;


  create table
  public.users (
    id bigint generated by default as identity not null,
    fullname text not null,
    socials text null,
    password text not null,
    email text not null,
    constraint user_pkey primary key (id),
    constraint user_id_key unique (id),
    constraint users_email_key unique (email),
    constraint user_name_check check ((length(fullname) < 100)),
    constraint users_email_check check ((length(email) < 50)),
    constraint users_social_check check ((length(socials) < 50))
  ) tablespace pg_default;